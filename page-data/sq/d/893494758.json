{"data":{"allMdx":{"nodes":[{"id":"9afd841b-46bd-565b-82b5-2af4fbe26b07","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"HexZen\",\n  \"shortDescription\": \"Casual building game without objectives\",\n  \"creationDate\": \"2021-06-01T09:00:31.503Z\",\n  \"screenshots\": [\"assets/images/hexzen_1.jpg\", \"assets/images/hexzen_2.jpg\", \"assets/images/hexzen_4.jpg\"],\n  \"gameLink\": \"https://kreivi.itch.io/hexzen\",\n  \"gameplayVideoLink\": \"https://youtu.be/_Nt9fSOI918\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"HexZen\"), \" is a very casual building game which has no scores or objectives for player to worry about. It's all about building something beautiful one piece at a time.\"), mdx(\"p\", null, \"It was my entry for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gogodotjam.com/\"\n  }, \"GoGodotJam\"), \" game jam which had time frame limited to nine days with the theme 'Growth'. During those nine days I managed to spend around ten hours to make the game so it ended up quite unpolished and simple. However I managed to implement the core gameplay loop where player is randomly given a tile to place in the world or discard as seen fit.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"1st Jun 2021","shortDescription":"Casual building game without objectives","title":"HexZen","screenshots":["assets/images/hexzen_1.jpg","assets/images/hexzen_2.jpg","assets/images/hexzen_4.jpg"]}},{"id":"b2c9b560-f973-5918-8090-72b5f60ac6e3","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Kuumela\",\n  \"shortDescription\": \"Arcade game where you defend earth from incoming asteroids by moving moon to block the trajectories of the asteroids.\",\n  \"creationDate\": \"2020-11-30T10:00:02.237Z\",\n  \"screenshots\": [\"assets/images/cover.jpg\", \"assets/images/screenshot002.jpg\", \"assets/images/screenshot003.jpg\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Kuumela\"), \" is an arcade game which was my entry for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.blog/2020-10-27-github-game-off-2020/\"\n  }, \"Game Off 2020\"), \" game jam organized by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/\"\n  }, \"GitHub\"), \". Time was limited to a month and during that time I managed to use around 15 to 25 hours to make this game from scratch.\"), mdx(\"p\", null, \"It's using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://godotengine.org/\"\n  }, \"Godot Engine\"), \" and it was the first game I have ever done using the engine. It still would require polishing and additions especially in the graphics and effects to make give great experience but the core gameplay loop is pretty fun and surprisingly challenging for a while. That being said I probably will not take this game any further from its current state.\"), mdx(\"p\", null, \"You can play the game at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kreivi.itch.io/kuumela\"\n  }, \"Itch\"), \" and the source code is available at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kreivi/Kuumela\"\n  }, \"GitHub\"), \".\"), mdx(\"p\", null, \"Here is short gameplay video and some screenshots of the game.\"), mdx(\"div\", {\n    \"className\": \"gatsby-resp-iframe-wrapper\",\n    \"style\": {\n      \"paddingBottom\": \"56.25%\",\n      \"position\": \"relative\",\n      \"height\": \"0\",\n      \"overflow\": \"hidden\"\n    }\n  }, \" \", mdx(\"iframe\", {\n    parentName: \"div\",\n    \"id\": \"ytplayer\",\n    \"type\": \"text/html\",\n    \"src\": \"https://www.youtube.com/embed/vrZI9zEzo1c?disablekb=1&fs=0&modestbranding=1&iv_load_policy=3\",\n    \"frameBorder\": \"0\",\n    \"allowFullScreen\": true,\n    \"style\": {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"30th Nov 2020","shortDescription":"Arcade game where you defend earth from incoming asteroids by moving moon to block the trajectories of the asteroids.","title":"Kuumela","screenshots":["assets/images/cover.jpg","assets/images/screenshot002.jpg","assets/images/screenshot003.jpg"]}},{"id":"af264a1c-322b-5383-8aef-be6a8578f7a7","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Prototypes\",\n  \"shortDescription\": \"Various prototypes that have not yet been completed.\",\n  \"creationDate\": \"2014-10-01T09:21:10.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h4\", null, \"Turn based tactics\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Turn based tactics\"), \" is a cooperative multiplayer game where players would order their characters to take actions in sequence and the consequences of the actions would be simulated by the AI controlling each character. Prototype is supporting basic multiplayer hosting & joining mechanisms and each player is given a character that they can then give orders to. Some of the core UMG component has been customized to easily build consistent and clear user interface with the Unreal Engine design tools.\"), mdx(\"p\", null, \"Turn based sequencing is missing from the game and in it's current state only the crude lobby area where players can move has been implemented. Greatest inspiration for this game prototype is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Jagged_Alliance:_Deadly_Games\"\n  }, \"Jagged Alliance: Deadly Games\"), \" by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Sir-Tech\"\n  }, \"Sir-Tech\"), \" which we used to play as hot-seat multiplayer with couple of my buddies way back in the nineties. Prototype or source code is not currently publicly available.\"), mdx(\"h5\", null, \"Multiplayer demo\"), mdx(\"div\", {\n    \"className\": \"gatsby-resp-iframe-wrapper\",\n    \"style\": {\n      \"paddingBottom\": \"56.25%\",\n      \"position\": \"relative\",\n      \"height\": \"0\",\n      \"overflow\": \"hidden\"\n    }\n  }, \" \", mdx(\"iframe\", {\n    parentName: \"div\",\n    \"id\": \"ytplayer\",\n    \"type\": \"text/html\",\n    \"src\": \"https://www.youtube.com/embed/eUIp6hXtqXY?disablekb=1&fs=0&modestbranding=1&iv_load_policy=3\",\n    \"frameBorder\": \"0\",\n    \"allowFullScreen\": true,\n    \"style\": {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }), \" \"), mdx(\"h5\", null, \"User interface demo\"), mdx(\"div\", {\n    \"className\": \"gatsby-resp-iframe-wrapper\",\n    \"style\": {\n      \"paddingBottom\": \"56.25%\",\n      \"position\": \"relative\",\n      \"height\": \"0\",\n      \"overflow\": \"hidden\"\n    }\n  }, \" \", mdx(\"iframe\", {\n    parentName: \"div\",\n    \"id\": \"ytplayer\",\n    \"type\": \"text/html\",\n    \"src\": \"https://www.youtube.com/embed/dJJP_HGybss?disablekb=1&fs=0&modestbranding=1&iv_load_policy=3\",\n    \"frameBorder\": \"0\",\n    \"allowFullScreen\": true,\n    \"style\": {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }), \" \"), mdx(\"h4\", null, \"Top down shooter\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Top down shooter\"), \" is a prototype where I experimented how to create traditional two stick shooter. I was inspired to try it out after playing some \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Helldivers\"\n  }, \"Helldivers\"), \" by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.arrowheadgamestudios.com/\"\n  }, \"Arrowhead Studios\"), \" and wanted to have some ARPG gear collection mechanisms incorporated into the mix.\"), mdx(\"p\", null, \"I experimented a bit with physical materials for different footstep sounds and created very basic roaming AI controlled characters that wonder around in the level. Next step would be to create gunplay as without it it's not much of a shooter. Prototype or source code is not currently publicly available.\"), mdx(\"div\", {\n    \"className\": \"gatsby-resp-iframe-wrapper\",\n    \"style\": {\n      \"paddingBottom\": \"56.25%\",\n      \"position\": \"relative\",\n      \"height\": \"0\",\n      \"overflow\": \"hidden\"\n    }\n  }, \" \", mdx(\"iframe\", {\n    parentName: \"div\",\n    \"id\": \"ytplayer\",\n    \"type\": \"text/html\",\n    \"src\": \"https://www.youtube.com/embed/_EkypEjkH8Y?disablekb=1&fs=0&modestbranding=1&iv_load_policy=3\",\n    \"frameBorder\": \"0\",\n    \"allowFullScreen\": true,\n    \"style\": {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"1st Oct 2014","shortDescription":"Various prototypes that have not yet been completed.","title":"Prototypes","screenshots":null}}]}}}