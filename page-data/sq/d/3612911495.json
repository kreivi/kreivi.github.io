{"data":{"allMdx":{"nodes":[{"id":"d00629b1-34c5-5422-8084-1dbe50c8486a","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Kalewave\",\n  \"shortDescription\": \"Platformer in syntwave setting\",\n  \"creationDate\": \"2023-01-01T08:04:05.131Z\",\n  \"gameLink\": \"https://kreivi.itch.io/kalewave\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Realizing I never done platformer before I wanted to make one. It was interesting to read and implement different detailed mechanisms (such as coyote time, input buffering etc.) that go into platformer character movement. I tried creating the character and it\\u2019s movement as reusable and configurable as possible by separating the functionality into addon for Godot.\"), mdx(\"p\", null, \"The theme kind of stroke me mid-project as I listened a lot of synthwave music during development and started to read\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Kalevala\"\n  }, \"Kalevala\"), \"\\xA0as well.\"), mdx(\"p\", null, \"Game is not very long and without any threats there\\u2019s no risk involved in gameplay. I wanted to introduce simple puzzle mechanisms to have some other challenge than the level navigation and jump timing. Combining colours was something that I thought earlier in another prototype so I implemented it into this game. I realize it\\u2019s not accessible at all to have mechanism rely on colours so I created simple shapes to help distingify between red, green and blue colours. It\\u2019s still not the best but it\\u2019s better than nothing.\"), mdx(\"p\", null, \"All in all it was pretty fun project but it took me way longer than I anticipated. Goes to show that as solo developer with very limited free time you need to keep ideas small and accept the fact that it takes a long time to make relatively simple games.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"1st Jan 2023","shortDescription":"Platformer in syntwave setting","title":"Kalewave","gameLink":"https://kreivi.itch.io/kalewave","gameplayVideoLink":null,"sourceCodeLink":null}},{"id":"dca25151-0cdd-55c3-9484-0708d16cf3cf","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Unfantomable Brine\",\n  \"shortDescription\": \"Top down arcade sailing game\",\n  \"creationDate\": \"2022-01-23T19:00:46.835Z\",\n  \"gameLink\": \"https://kreivi.itch.io/unfantomable-brine\",\n  \"sourceCodeLink\": \"https://github.com/kreivi/godot-wild-jam-41\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Unfantomable Brine (yeah the name is mispelled) is a top-down arcade sailing game that I made for (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://itch.io/jam/godot-wild-jam-41)%5BGodot\"\n  }, \"https://itch.io/jam/godot-wild-jam-41)[Godot\"), \" Wild Jam #41](\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://itch.io/jam/godot-wild-jam-41\"\n  }, \"https://itch.io/jam/godot-wild-jam-41\"), \"). As the game jam name suggests, the game was developed using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://godotengine.org/\"\n  }, \"Godot Engine\"), \" and had a time limit of nine days. During those nine days, I managed to put somewhere around 20 hours into the game. You can check out the game on the provided Itch page, where there's also a postmortem available where I summarize the successes and failures I identified with the game.\"), mdx(\"p\", null, \"I might return to this idea in the future and try to take it further. I'm a fan of naval-themed games and would love to make one with a bigger scale myself as well.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"23rd Jan 2022","shortDescription":"Top down arcade sailing game","title":"Unfantomable Brine","gameLink":"https://kreivi.itch.io/unfantomable-brine","gameplayVideoLink":null,"sourceCodeLink":"https://github.com/kreivi/godot-wild-jam-41"}},{"id":"9afd841b-46bd-565b-82b5-2af4fbe26b07","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"HexZen\",\n  \"shortDescription\": \"Casual building game without pressure.\",\n  \"creationDate\": \"2021-06-01T09:00:31.503Z\",\n  \"screenshots\": [\"assets/images/hexzen_1.jpg\", \"assets/images/hexzen_2.jpg\", \"assets/images/hexzen_4.jpg\"],\n  \"gameLink\": \"https://kreivi.itch.io/hexzen\",\n  \"gameplayVideoLink\": \"https://youtu.be/_Nt9fSOI918\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"HexZen\"), \" is a very casual building game that has no scores or objectives for players to worry about. It's all about building something beautiful, one piece at a time.\"), mdx(\"p\", null, \"It was my entry for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://gogodotjam.com/\"\n  }, \"GoGodotJam\"), \", a game jam with a time frame limited to nine days and the theme 'Growth'. During those nine days, I managed to spend around ten hours creating the game, so it ended up quite unpolished and simple. However, I successfully implemented the core gameplay loop where players are randomly given a tile to place in the world or discard as they see fit to build some pleasing landscapes.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"1st Jun 2021","shortDescription":"Casual building game without pressure.","title":"HexZen","gameLink":"https://kreivi.itch.io/hexzen","gameplayVideoLink":"https://youtu.be/_Nt9fSOI918","sourceCodeLink":null}},{"id":"b2c9b560-f973-5918-8090-72b5f60ac6e3","body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Kuumela\",\n  \"shortDescription\": \"Arcade game where you defend earth from incoming asteroids\",\n  \"creationDate\": \"2020-11-30T10:00:02.237Z\",\n  \"screenshots\": [\"assets/images/cover.jpg\", \"assets/images/screenshot002.jpg\", \"assets/images/screenshot003.jpg\"],\n  \"gameLink\": \"https://kreivi.itch.io/kuumela\",\n  \"gameplayVideoLink\": \"https://youtu.be/vrZI9zEzo1c\",\n  \"sourceCodeLink\": \"https://github.com/kreivi/Kuumela\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Kuumela\"), \" is an arcade game, and it was my entry for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.blog/2020-10-27-github-game-off-2020/\"\n  }, \"Game Off 2020\"), \", a game jam organized by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/\"\n  }, \"GitHub\"), \". The time was limited to a month, and during that period, I managed to spend around 15 to 25 hours creating the game from scratch.\"), mdx(\"p\", null, \"It's built using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://godotengine.org/\"\n  }, \"Godot Engine\"), \", and it was the first game I have ever developed using this engine. While it could use some polishing and additional graphics and effects to provide a better experience, the core gameplay loop is quite fun and surprisingly challenging for a while. That being said, I probably will not take this game any further from its current state.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"creationDate":"30th Nov 2020","shortDescription":"Arcade game where you defend earth from incoming asteroids","title":"Kuumela","gameLink":"https://kreivi.itch.io/kuumela","gameplayVideoLink":"https://youtu.be/vrZI9zEzo1c","sourceCodeLink":"https://github.com/kreivi/Kuumela"}}]}}}